---
layout:     post
title:      "Jupyter Notebook + Python 备忘"
subtitle:   "人蠢就得多动手"
date:       2018-01-29
author:     "mingjie"
header-img: "img/post-bg-jpynb.jpg"
tags:
    - learning

---

## Catagory

1. [Jpynb备忘](#jpynb)
	1. [改变Notebook里面Markdown文字颜色](#jpynb-color_change)
	2. [Matplotlib中`'\theta'`变为`heta`的问题](#jpynb-theta)
2. [Python备忘](#py)
	1. [Numpy中的矩阵合并](#py-array_stack)
	2. [自己写包](#py-package)
  3. Pandas
  4. matplotlib

<p id = "jpynb"></p>
### Jpynb备忘

<p id = "jpynb-color_change"></p>
#### 改变Notebook里面Markdown文字颜色

例如想要这样的效果：foo <font color='red'> bar </font> foo

`foo <font color='red'> bar </font> foo`

其实就是一个HTML的attribute。

<p id = "jpynb-theta"></p>
#### Matplotlib中`'\theta'`变为`heta`的问题

这是因为`\t`在字符串中会被转义为Tab，所以要在字符串前加上一个`r`。

<p id = "py"></p>
### Python备忘

<p id = "py-array_stack"></p>
#### Numpy中的矩阵合并
- 列合并/扩展：np.column_stack()
- 行合并/扩展：np.row_stack()

<p id = "py-pandas"></p>
#### Pandas

DataFrame里面选出几列：`df[['a', 'b']]`

#### 从pdf中提取表格
先安装tabula-py：
`pip install tablua-py`

导入，使用：

```py
import tabula
tabula.read_pdf('xxx.pdf', options='--pages 4')
```

<p id = "py-package"></p>
#### 自己写包

一直都想这么干了，之前的代码都是复制粘贴，觉得很没有效率；所以决定将常用的代码写成一个包方便调用。目标是想numpy一样有层级，同时只导入包名能用Tab提示下面层级的内容。

首先描述文件结构：

```
\ruler
  \ruler
    __init__.py
    convert.py
    \subpackage
      __init__.py
      something.py
  setup.py
```

因为还没完全写好，就先把一个示例放上来。最外面的ruler是安装用的，不叫包名应该也可以（但是如果要上传到PyPi的话应该有要求），里面的setup.py需要有这样的内容：

```py
from setuptools import setup

setup(name='ruler',
      version='0.1',
      description='The ruler for spectra',
      url='',
      author='Mingjie Jian',
      author_email='ssaajianmingjie@gmail.com',
      license='MIT',
      packages=['ruler'],
      zip_safe=False)
```
如果只有`name`和`version`的话可能也行。第二层的ruler是真正的包，它以及里面的每个文件夹都需要有一个`__init__.py`，表示这是包。从这一级开始里面就可以放module，也就是`.py`文件了。不过要达到之前的目的（仅import包名但自动提示模块）需要在每一个`__init__.py`里面将对应文件夹包含的module以及子文件夹们import掉；比如ruler里面的要这样写：

```py
from . import convert
from . import subpackage
```

当然subpackage里面的也需要这样写才能把所有的module都带上。想要测试的话先import然后用`dir()`看看module和子文件夹在不在里面就行。

这些搞定之后就可以跑回最外级的ruler里面打开终端，运行`pip install -e .`。暂时不知道为什么，但是这种方法可以直接在Jpynb里面用，把Jpynb重启一遍就行了。

参考资料：<br>
[Python Tutorial Chap. 6](https://docs.python.org/3/tutorial/modules.html#packages)<br>
[How To Package Your Python Code](https://python-packaging.readthedocs.io/en/latest/index.html)<br>
[Python导入模块的几种姿势](http://codingpy.com/article/python-import-101/)

#### Pandas

##### 读取固定宽度表格
```py
pd.read_fwf('catalog/Kovtyukh/Kovtyukh04/table1.dat',
                           colspecs=[(0,10), (11, 15), (16,19), (20,24), (25,29), (30,34), (35,40), (41,46),
                                     (47,52), (53,68)],
                           names=['Star', 'Teff', 'N', 'e_Teff', 'logg', 'Vt', '[Fe/H]', 'VMAG',
                                  'B-V', 'Rem'])
```
#### Matplotlib

##### 防止重叠或者出边界

`plt.tight_layout()`
